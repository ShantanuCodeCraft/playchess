generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(uuid())
  username    String    @unique
  email       String    @unique
  password    String    @unique
  gameAsWhite Game[]    @relation("playerASWhite")
  gameAsBlack Game[]    @relation("playerAsBlack")
  createdAt   DateTime  @default(now())
  lastLogin   DateTime?
}

model Game {
  id            String        @id @default(uuid())
  whitePlayer   User       @relation("playerASWhite", fields: [whitePlayerId], references: [username])
  whitePlayerId String
  blackPlayer   User       @relation("playerAsBlack", fields: [blackPlayerId], references: [username])
  blackPlayerId String
  startingFen   String?     @default("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1")
  currentFen    String
  status        GameStatus
  result        GameResult?
  startAt       DateTime   @default(now())
  endAt         DateTime?
  moves         Move[]
}

model Move {
  id        String      @id @default(uuid())
  game      Game     @relation(fields: [gameId], references: [id])
  gameId    String
  from      String
  to        String
  san       String
  color     String
  piece     String
  timeTaken Int      @default(0)
  createdAt DateTime @default(now())
}

enum GameResult {
  WHITE_WINS
  BLACK_WINS
  DRAW
}

enum GameStatus {
  IN_PROGRESS
  COMPLETED
  ABANDONED
  TIME_UP
  PLAYER_EXIT
}
